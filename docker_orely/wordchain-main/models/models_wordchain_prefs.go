// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelsWordchainPrefs models wordchain prefs
//
// swagger:model models.WordchainPrefs
type ModelsWordchainPrefs struct {

	// The divider to use between each chain segment.
	Divider string `json:"divider,omitempty"`

	// The length of the words for each chain segment.
	Length int64 `json:"length,omitempty"`

	// A string to postpend the chain segment with.
	Postpend string `json:"postpend,omitempty"`

	// A string to prepend the chain segment with.
	Prepend string `json:"prepend,omitempty"`

	// A string to use as a seed for deterministic results.
	Seed string `json:"seed,omitempty"`

	// An array of word types to return in the chain.
	Type []string `json:"type"`
}

// Validate validates this models wordchain prefs
func (m *ModelsWordchainPrefs) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this models wordchain prefs based on context it is used
func (m *ModelsWordchainPrefs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsWordchainPrefs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsWordchainPrefs) UnmarshalBinary(b []byte) error {
	var res ModelsWordchainPrefs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
